type StatusJamKerja {
    id: ID!
    nama: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input CreateStatusJamKerjaInput {
    nama: String!
}

input UpdateStatusJamKerjaInput {
    nama: String!
}

extend type Query {
    allStatusJamKerja: [StatusJamKerja!]!
    @all(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")

    statusJamKerja(id: ID! @eq) : StatusJamKerja
    @find(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")

    statusJamKerjaByNama(nama: String! @where(operator: "like", key: "nama")): [StatusJamKerja!]!
    @all(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")
}

extend type Mutation {
    # tambah data
    createStatusJamKerja(input: CreateStatusJamKerjaInput! @spread): StatusJamKerja
    @create(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")

    # ubah data
    updateStatusJamKerja(
        id: ID! @eq,
        input: UpdateStatusJamKerjaInput! @spread
        ): StatusJamKerja
    @update(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")

    deleteStatusJamKerja(id: ID! @eq): StatusJamKerja
    @delete(model: "App\\Models\\StatusJamKerja\\StatusJamKerja")

    restoreStatusJamKerja(id: ID!): StatusJamKerja
    @field(resolver: "App\\GraphQL\\StatusJamKerja\\Mutations\\StatusJamKerjaMutation@restore")

    forceDeleteStatusJamKerja(id: ID!): StatusJamKerja
    @field(resolver: "App\\GraphQL\\StatusJamKerja\\Mutations\\StatusJamKerjaMutation@forceDelete")
}