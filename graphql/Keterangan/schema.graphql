type Keterangan {
    id: ID!
    bagian_id: ID!
    proyek_id: ID!
    tanggal: Date
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime

    bagian: Bagian @belongsTo
    proyek: Proyek @belongsTo
}

input CreateKeteranganInput {
    bagian_id: ID!
    proyek_id: ID!
    tanggal: Date!
}

input UpdateKeteranganInput {
    tanggal: Date
}

extend type Query {
    allKeterangan: [Keterangan!]!
    @all(model: "App\\Models\\Keterangan\\Keterangan")

    keterangan(id: ID! @eq) : Keterangan
    @find(model: "App\\Models\\Keterangan\\Keterangan")

    keteranganByTanggal(tanggal: Date! @where(key: "tanggal")): [Keterangan!]!
    @all(model: "App\\Models\\Keterangan\\Keterangan")
}

extend type Mutation {
    # tambah data
    createKeterangan(input: CreateKeteranganInput! @spread): Keterangan
    @create(model: "App\\Models\\Keterangan\\Keterangan")

    # ubah data
    updateKeterangan(
        id: ID! @eq,
        input: UpdateKeteranganInput! @spread
        ): Keterangan
    @update(model: "App\\Models\\Keterangan\\Keterangan")

    deleteKeterangan(id: ID! @eq): Keterangan
    @delete(model: "App\\Models\\Keterangan\\Keterangan")

    restoreKeterangan(id: ID!): Keterangan
    @field(resolver: "App\\GraphQL\\Keterangan\\Mutations\\KeteranganMutation@restore")

    forceDeleteKeterangan(id: ID!): Keterangan
    @field(resolver: "App\\GraphQL\\Keterangan\\Mutations\\KeteranganMutation@forceDelete")
}